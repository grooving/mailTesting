# Generated by Django 2.1.7 on 2019-04-15 04:16

from decimal import Decimal
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('photo', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('iban', models.CharField(blank=True, max_length=34, null=True)),
                ('paypalAccount', models.EmailField(blank=True, max_length=254, null=True)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=2, validators=[django.core.validators.MinValueValidator(Decimal('0.0')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArtisticGender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=140)),
                ('parentGender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='emailTesting.ArtisticGender')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('days', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Custom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('minimumPrice', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('photo', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('iban', models.CharField(blank=True, max_length=34, null=True)),
                ('paypalAccount', models.EmailField(blank=True, max_length=254, null=True)),
                ('holder', models.CharField(blank=True, max_length=255, null=True)),
                ('expirationDate', models.DateField(blank=True, null=True)),
                ('number', models.CharField(blank=True, max_length=16, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(max_length=255)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eventLocations', to='emailTesting.Customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('priceHour', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('description', models.TextField(default='Description', max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('NEGOTIATION', 'NEGOTIATION'), ('CONTRACT_MADE', 'CONTRACT_MADE'), ('WITHDRAWN', 'WITHDRAWN'), ('REJECTED', 'REJECTED'), ('CANCELLED_ARTIST', 'CANCELLED_ARTIST'), ('CANCELLED_CUSTOMER', 'CANCELLED_CUSTOMER'), ('PAYMENT_MADE', 'PAYMENT_MADE')], default='PENDING', max_length=20)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('hours', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.5'))])),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('paymentCode', models.CharField(blank=True, max_length=140, null=True, unique=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('appliedVAT', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('eventLocation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='emailTesting.EventLocation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('custom', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailTesting.Custom')),
                ('fare', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailTesting.Fare')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('info', models.TextField(max_length=255)),
                ('hours', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.5'))])),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('banner', models.CharField(blank=True, max_length=300, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('artisticName', models.CharField(blank=True, max_length=140, null=True)),
                ('artisticGender', models.ManyToManyField(blank=True, to='emailTesting.ArtisticGender')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('PHOTO', 'PHOTO'), ('VIDEO', 'VIDEO'), ('AUDIO', 'AUDIO'), ('SOCIAL', 'SOCIAL'), ('MEMBER', 'MEMBER')], max_length=20)),
                ('link', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emailTesting.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('minimumPrice', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('paypalTax', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('creditCardTax', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('vat', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('profit', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('corporateEmail', models.EmailField(default='info@grooving.com', max_length=254)),
                ('reportEmail', models.EmailField(default='report@grooving.com', max_length=254)),
                ('logo', models.CharField(max_length=255)),
                ('appName', models.CharField(max_length=255)),
                ('slogan', models.CharField(blank=True, max_length=255, null=True)),
                ('termsText', models.TextField(default='Terms text', max_length=255)),
                ('privacyText', models.TextField(default='Privacy text', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('holder', models.CharField(blank=True, max_length=255, null=True)),
                ('expirationDate', models.DateField(blank=True, null=True)),
                ('number', models.CharField(blank=True, max_length=16, null=True)),
                ('cvv', models.CharField(blank=True, max_length=3, null=True)),
                ('ibanCustomer', models.CharField(blank=True, max_length=34, null=True)),
                ('paypalCustomer', models.EmailField(blank=True, max_length=254, null=True)),
                ('ibanArtist', models.CharField(blank=True, max_length=34, null=True)),
                ('paypalArtist', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationMoment', models.DateTimeField(auto_now_add=True)),
                ('lastModification', models.DateTimeField(auto_now=True)),
                ('isHidden', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=140)),
                ('parentZone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='emailTesting.Zone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='portfolio',
            name='zone',
            field=models.ManyToManyField(blank=True, to='emailTesting.Zone'),
        ),
        migrations.AddField(
            model_name='paymentpackage',
            name='performance',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailTesting.Performance'),
        ),
        migrations.AddField(
            model_name='paymentpackage',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='emailTesting.Portfolio'),
        ),
        migrations.AddField(
            model_name='offer',
            name='paymentPackage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='emailTesting.PaymentPackage'),
        ),
        migrations.AddField(
            model_name='offer',
            name='rating',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailTesting.Rating'),
        ),
        migrations.AddField(
            model_name='offer',
            name='transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailTesting.Transaction'),
        ),
        migrations.AddField(
            model_name='eventlocation',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='emailTesting.Zone'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='portfolio',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='emailTesting.Portfolio'),
        ),
        migrations.AddField(
            model_name='artist',
            name='portfolio',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='emailTesting.Portfolio'),
        ),
        migrations.AddField(
            model_name='artist',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
